{
  "swagger": "2.0",
  "info": {
    "title": "author.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Author"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/author": {
      "delete": {
        "operationId": "Author_AuthorDelete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiAuthorDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiAuthorDeleteRequest"
            }
          }
        ],
        "tags": [
          "Author"
        ]
      },
      "post": {
        "operationId": "Author_AuthorCreate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiAuthorCreateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiAuthorCreateRequest"
            }
          }
        ],
        "tags": [
          "Author"
        ]
      },
      "put": {
        "operationId": "Author_AuthorUpdate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiAuthorUpdateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiAuthorUpdateRequest"
            }
          }
        ],
        "tags": [
          "Author"
        ]
      }
    },
    "/v1/author/{id}": {
      "get": {
        "operationId": "Author_AuthorGet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiAuthorGetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Author"
        ]
      }
    },
    "/v1/authors": {
      "get": {
        "operationId": "Author_AuthorList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiAuthorListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Author"
        ]
      }
    }
  },
  "definitions": {
    "AuthorListResponseAuthor": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "apiAuthorCreateRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "apiAuthorCreateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "apiAuthorDeleteRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "apiAuthorDeleteResponse": {
      "type": "object"
    },
    "apiAuthorGetResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "apiAuthorListResponse": {
      "type": "object",
      "properties": {
        "authors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthorListResponseAuthor"
          }
        }
      }
    },
    "apiAuthorUpdateRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "apiAuthorUpdateResponse": {
      "type": "object"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
